{"remainingRequest":"/Users/amou/Documents/GitHub/demo1/news/node_modules/babel-loader/lib/index.js!/Users/amou/Documents/GitHub/demo1/news/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/amou/Documents/GitHub/demo1/news/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/amou/Documents/GitHub/demo1/news/src/components/AuthInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/amou/Documents/GitHub/demo1/news/src/components/AuthInput.vue","mtime":1582182819979},{"path":"/Users/amou/Documents/GitHub/demo1/news/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/amou/Documents/GitHub/demo1/news/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/amou/Documents/GitHub/demo1/news/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/amou/Documents/GitHub/demo1/news/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpc1ZhbGlkOiBmYWxzZQogICAgfTsKICB9LAogIHByb3BzOiBbJ3R5cGUnLCAncGxhY2Vob2xkZXInLCAncnVsZScsICdlcnJNc2cnXSwKICBtZXRob2RzOiB7CiAgICBjaGVja1ZhbHVlOiBmdW5jdGlvbiBjaGVja1ZhbHVlKGV2ZW50KSB7CiAgICAgIHZhciByZWdFeHAgPSBuZXcgUmVnRXhwKHRoaXMucnVsZSk7CiAgICAgIHRoaXMuaXNWYWxpZCA9IHJlZ0V4cC50ZXN0KGV2ZW50LnRhcmdldC52YWx1ZSk7CiAgICAgIHRoaXMuJGVtaXQoJ3ZhbHVlQ2hhbmdlJywgZXZlbnQudGFyZ2V0LnZhbHVlKTsKICAgIH0sCiAgICBzaG93QWxlcnQ6IGZ1bmN0aW9uIHNob3dBbGVydCgpIHsKICAgICAgLy/lpLHljrvnhKbngrnop6blj5Hlh73mlbAKICAgICAgLy/lpoLmnpx0aGlzLmlzVmFsaWTlt7Lnu4/mmK9mYWxzZQogICAgICAvL+ivgeaYjuS4jeWQiOazle+8jOmcgOimgeW8ueeqlwogICAgICAvL+WQiOazleWwseaXoOW8ueeqlwogICAgICBpZiAoIXRoaXMuaXNWYWxpZCkgewogICAgICAgIGFsZXJ0KHRoaXMuZXJyTXNnKTsKICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"sources":["AuthInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,OAAA,EAAA;AADA,KAAA;AAGA,GALA;AAMA,EAAA,KAAA,EAAA,CAAA,MAAA,EAAA,aAAA,EAAA,MAAA,EAAA,QAAA,CANA;AAOA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,KADA,EACA;AACA,UAAA,MAAA,GAAA,IAAA,MAAA,CAAA,KAAA,IAAA,CAAA;AACA,WAAA,OAAA,GAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AACA,WAAA,KAAA,CAAA,aAAA,EAAA,KAAA,CAAA,MAAA,CAAA,KAAA;AACA,KALA;AAMA,IAAA,SANA,uBAMA;AACA;AACA;AACA;AACA;AACA,UAAA,CAAA,KAAA,OAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,MAAA,CAAA;AACA;AACA;AAdA;AAPA,CAAA","sourcesContent":["<template>\n  <div class=\"input-wrapper\">\n    <!-- <h1>这里是输入框组件的 h1</h1> -->\n    <!-- 每当我们的这个 input 框接收到输入\n    都要进行一次判断, 看看合不合法\n    可以绑定 input 事件 -->\n\n      <!-- 这里 input 是一个输入框\n      我希望如果输入发生错误的时候它的样式被改变\n      方法是动态 v-bind 绑定一个 class 进来 -->\n\n      <!-- 为什么绑定 input 事件\n      不是绑定 change / blur 事件\n      是因为每次输入我们希望能够马上改变下划线样式, 不是等到失去焦点再判断 -->\n\n\n      <!-- 以前我们的写法是绑定一个变量, 直接以字符串变量作为 class\n      <input type=\"text\" :class=\"isValid\">\n      这样子只会绑定一个字符串 true / false\n      如果想根据布尔值动态添加 class 可以使用 对象的形式声明 -->\n      <!-- 这个对象里面是 key : value 键值对\n      其中 key 是准备添加的 class \n      value 是用来判断是否应该添加的布尔值 -->\n      <!-- 现在我们希望 isValid 为 false, 自动添加 err class -->\n      <!-- 假设我希望, 如果 isValid 为 true 则添加 success 的 class  -->\n      <!-- 现在input 已经可以根据 isValid 动态改变 class 接下来只需要 给 err\n      class 添加特定的 样式即可 -->\n      <input\n        :class=\"{\n          err: !isValid,\n          success: isValid\n        }\"\n        :type=\"type\" \n        :placeholder=\"placeholder\"\n        @input=\"checkValue\"\n        @blur=\"showAlert\"\n      >\n      <!-- 监控失去焦点事件\n      如果失去焦点(输入完毕)\n      这个 input 的数据还是不合法\n      需要弹窗提醒 -->\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      isValid: false\n    }\n  },\n  props:['type','placeholder','rule','errMsg'],\n  methods:{\n    checkValue(event){\n      const regExp = new RegExp(this.rule)\n      this.isValid = regExp.test(event.target.value);\n      this.$emit('valueChange',event.target.value)\n    },\n    showAlert(){\n      //失去焦点触发函数\n      //如果this.isValid已经是false\n      //证明不合法，需要弹窗\n      //合法就无弹窗\n      if (!this.isValid){\n        alert(this.errMsg)\n      }\n    }\n  }\n \n}\n</script>\n\n<style lang=\"less\" scoped>\n  // h1 {\n  //   color: green;\n  // }\n  .input-wrapper {\n    padding: 5.556vw;\n    padding-top: 0;\n    input {\n      width: 100%;\n      height: 10.556vw;\n      box-sizing: border-box;\n      background: #fff;\n      border: none;\n      /* 因为 vw 都是经过换算, 太小的数字容易被忽略,\n      有一些浏览器会显示不出来\n      一般小于 10px 的情况下,我们都会直接写像素 */\n      border-bottom: 1px solid #666;\n      outline: none;\n    }\n    .err {\n      border-color: red;\n    }\n    .success {\n      border-color: #666\n    }\n  }\n  \n</style>"],"sourceRoot":"src/components"}]}